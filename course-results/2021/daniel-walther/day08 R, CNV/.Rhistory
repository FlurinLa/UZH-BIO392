knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## Step 1: Install package
```{r}
if (!require(devtools)){
install.packages('devtools')
}
devtools::install_github('progenetix/pgxRpi')
devtools::install_github('progenetix/pgxRpi')
library(pgxRpi)
freq <- pgxLoader(type='frequency', output='pgxseg',filters='NCIT:C4025',
codematches=T)
View(freq)
View(freq)
### The retreived data is an object contaning two slots `meta` and `data`.
The `meta` slot looks like this:
```{r}
freq$meta
freq$meta
The `data` slot includes two matrices.
```{r}
names(freq$data)
```
```{r}
names(freq$data)
names(freq$data)
In this case, these two matrices are the same.
```{r}
head(freq$data$`NCIT:C4025`)
dim(freq$data$`NCIT:C4025`)
```{r}
```{r}
dim(freq$data$`NCIT:C4025`)
dim(freq$data$`NCIT:C4025`)
## Step4: Visualize data
### By genome
```{r}
pgxFreqplot(freq)
pgxFreqplot(freq)
### By chromosome
```{r}
pgxFreqplot(freq,chrom = 20)
pgxFreqplot(freq,chrom = 20)
```{r}
head(freq$data$`NCIT:C4025`)
head(freq$data$`NCIT:C4025`)
check_installed{tinytex}
check_installed(tinytex)
check_installed("tinytex")
library("tinytex")
tinytex::check_installed(tinytex)
tinytex::check_installed("tinytex")
install("tinytex")
install(tinytex_root())
